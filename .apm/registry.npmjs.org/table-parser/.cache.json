{"_id":"table-parser","_rev":"11-f7440324e3b010631ea052211f300bdf","name":"table-parser","description":"Simple parser for shell-style data output","dist-tags":{"latest":"0.0.3"},"versions":{"0.0.1":{"name":"table-parser","description":"Simple parser for shell-style data output","version":"0.0.1","author":{"name":"Neekey ni184775761@gmail.com"},"keywords":["table parser shell"],"main":"index.js","repository":{"type":"git","url":"git@github.com:Neekey/table-parser.git"},"readme":"shellTableParser\n================\n\nA parser to parse table style output from shell\n\n## Install\n\n```\nnpm install table-parser\n```\n\n## Usage\n\nWe have some kind of log below as `test/ps.log`:\n\n```bash\n  PID TTY           TIME CMD\n49692 ttys000    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n49693 ttys000    0:00.06 -bash\n54195 ttys000    0:00.09 node run\n\n...\n\n56266 ttys005    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n56269 ttys005    0:00.04 -bash\n56463 ttys005    0:00.09 node test.js\n56464 ttys005    0:00.01 ps -a\n```\n\nUse table-parser to parse it into object:\n\n```\nvar FS = require( 'fs' );\nvar Parser = require( '../lib/index' );\n\nvar linux_ps = './ps.log';\n\ndata = FS.readFileSync( linux_ps ).toString();\nvar parsedData = Parser.parse( data );\n\nconsole.log( parsedData );\n\n```\n\nWhich will output:\n\n```bash\n[ { PID: [ '49692' ],\n    TTY: [ 'ttys000' ],\n    TIME: [ '0:00.06' ],\n    CMD:\n     [ 'login',\n       '-pfl',\n       'neekey',\n       '/bin/bash',\n       '-c',\n       'exec',\n       '-la',\n       'bash',\n       '/bin/bash' ] },\n  ...\n\n  { PID: [ '56464' ],\n    TTY: [ 'ttys005' ],\n    TIME: [ '0:00.01' ],\n    CMD: [ 'ps', '-a' ] } ]\n```\n","readmeFilename":"README.md","_id":"table-parser@0.0.1","dist":{"shasum":"3993e374127b2b8e0c0ec446f10a04d9933b62fb","tarball":"http://registry.npmjs.org/table-parser/-/table-parser-0.0.1.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"neekey","email":"ni184775761@gmail.com"},"maintainers":[{"name":"neekey","email":"ni184775761@gmail.com"}],"directories":{}},"0.0.2":{"name":"table-parser","description":"Simple parser for shell-style data output","version":"0.0.2","author":{"name":"Neekey ni184775761@gmail.com"},"keywords":["table parser shell"],"main":"index.js","repository":{"type":"git","url":"git@github.com:Neekey/table-parser.git"},"readme":"shellTableParser\n================\n\nA parser to parse table style output from shell\n\n## Install\n\n```\nnpm install table-parser\n```\n\n## Usage\n\nWe have some kind of log below as `test/ps.log`:\n\n```bash\n  PID TTY           TIME CMD\n49692 ttys000    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n49693 ttys000    0:00.06 -bash\n54195 ttys000    0:00.09 node run\n\n...\n\n56266 ttys005    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n56269 ttys005    0:00.04 -bash\n56463 ttys005    0:00.09 node test.js\n56464 ttys005    0:00.01 ps -a\n```\n\nUse table-parser to parse it into object:\n\n```\nvar FS = require( 'fs' );\nvar Parser = require( '../lib/index' );\n\nvar linux_ps = './ps.log';\n\ndata = FS.readFileSync( linux_ps ).toString();\nvar parsedData = Parser.parse( data );\n\nconsole.log( parsedData );\n\n```\n\nWhich will output:\n\n```bash\n[ { PID: [ '49692' ],\n    TTY: [ 'ttys000' ],\n    TIME: [ '0:00.06' ],\n    CMD:\n     [ 'login',\n       '-pfl',\n       'neekey',\n       '/bin/bash',\n       '-c',\n       'exec',\n       '-la',\n       'bash',\n       '/bin/bash' ] },\n  ...\n\n  { PID: [ '56464' ],\n    TTY: [ 'ttys005' ],\n    TIME: [ '0:00.01' ],\n    CMD: [ 'ps', '-a' ] } ]\n```\n","readmeFilename":"README.md","_id":"table-parser@0.0.2","dist":{"shasum":"89d6cadd3e501f6c9ec7adc1380056357692a4cd","tarball":"http://registry.npmjs.org/table-parser/-/table-parser-0.0.2.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"neekey","email":"ni184775761@gmail.com"},"maintainers":[{"name":"neekey","email":"ni184775761@gmail.com"}],"directories":{}},"0.0.3":{"name":"table-parser","description":"Simple parser for shell-style data output","version":"0.0.3","author":{"name":"Neekey ni184775761@gmail.com"},"keywords":["table parser shell"],"main":"index.js","repository":{"type":"git","url":"git@github.com:Neekey/table-parser.git"},"readme":"shellTableParser\n================\n\nA parser to parse table style output from shell\n\n## Install\n\n```\nnpm install table-parser\n```\n\n## Usage\n\nWe have some kind of log below as `test/ps.log`:\n\n```bash\n  PID TTY           TIME CMD\n49692 ttys000    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n49693 ttys000    0:00.06 -bash\n54195 ttys000    0:00.09 node run\n\n...\n\n56266 ttys005    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n56269 ttys005    0:00.04 -bash\n56463 ttys005    0:00.09 node test.js\n56464 ttys005    0:00.01 ps -a\n```\n\nUse table-parser to parse it into object:\n\n```\nvar FS = require( 'fs' );\nvar Parser = require( '../lib/index' );\n\nvar linux_ps = './ps.log';\n\ndata = FS.readFileSync( linux_ps ).toString();\nvar parsedData = Parser.parse( data );\n\nconsole.log( parsedData );\n\n```\n\nWhich will output:\n\n```bash\n[ { PID: [ '49692' ],\n    TTY: [ 'ttys000' ],\n    TIME: [ '0:00.06' ],\n    CMD:\n     [ 'login',\n       '-pfl',\n       'neekey',\n       '/bin/bash',\n       '-c',\n       'exec',\n       '-la',\n       'bash',\n       '/bin/bash' ] },\n  ...\n\n  { PID: [ '56464' ],\n    TTY: [ 'ttys005' ],\n    TIME: [ '0:00.01' ],\n    CMD: [ 'ps', '-a' ] } ]\n```\n","readmeFilename":"README.md","_id":"table-parser@0.0.3","dist":{"shasum":"35640443edc327f9b763d31af9b2ac7ddb5fb6bd","tarball":"http://registry.npmjs.org/table-parser/-/table-parser-0.0.3.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"neekey","email":"ni184775761@gmail.com"},"maintainers":[{"name":"neekey","email":"ni184775761@gmail.com"}],"directories":{}}},"readme":"shellTableParser\n================\n\nA parser to parse table style output from shell\n\n## Install\n\n```\nnpm install table-parser\n```\n\n## Usage\n\nWe have some kind of log below as `test/ps.log`:\n\n```bash\n  PID TTY           TIME CMD\n49692 ttys000    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n49693 ttys000    0:00.06 -bash\n54195 ttys000    0:00.09 node run\n\n...\n\n56266 ttys005    0:00.06 login -pfl neekey /bin/bash -c exec -la bash /bin/bash\n56269 ttys005    0:00.04 -bash\n56463 ttys005    0:00.09 node test.js\n56464 ttys005    0:00.01 ps -a\n```\n\nUse table-parser to parse it into object:\n\n```\nvar FS = require( 'fs' );\nvar Parser = require( '../lib/index' );\n\nvar linux_ps = './ps.log';\n\ndata = FS.readFileSync( linux_ps ).toString();\nvar parsedData = Parser.parse( data );\n\nconsole.log( parsedData );\n\n```\n\nWhich will output:\n\n```bash\n[ { PID: [ '49692' ],\n    TTY: [ 'ttys000' ],\n    TIME: [ '0:00.06' ],\n    CMD:\n     [ 'login',\n       '-pfl',\n       'neekey',\n       '/bin/bash',\n       '-c',\n       'exec',\n       '-la',\n       'bash',\n       '/bin/bash' ] },\n  ...\n\n  { PID: [ '56464' ],\n    TTY: [ 'ttys005' ],\n    TIME: [ '0:00.01' ],\n    CMD: [ 'ps', '-a' ] } ]\n```\n","maintainers":[{"name":"neekey","email":"ni184775761@gmail.com"}],"time":{"modified":"2013-01-28T15:18:52.708Z","created":"2013-01-27T08:27:03.452Z","0.0.1":"2013-01-27T08:27:07.600Z","0.0.2":"2013-01-28T07:23:04.260Z","0.0.3":"2013-01-28T15:18:52.708Z"},"author":{"name":"Neekey ni184775761@gmail.com"},"repository":{"type":"git","url":"git@github.com:Neekey/table-parser.git"},"_attachments":{},"_etag":"\"ATGTT62P4F8PYQMZMI52SHEZ1\""}